{"version":3,"sources":["components/EmployeeCard.js","components/Empoyees.js","components/EmpoyeesBirthday.js","App.js","reportWebVitals.js","index.js"],"names":["selectedName","color","EmployeeCard","styleName","employee","addFun","delFun","isNeeded","Card","className","Body","style","firstName","lastName","onChange","checked","type","value","name","id","propTypes","PropTypes","func","isRequired","namesProp","array","Empoyees","useState","isLoading","setIsLoading","names","setName","useEffect","a","sorted","undefined","map","charAt","push","cols","i","charCodeAt","employeecards","String","fromCharCode","sort","b","j","length","Col","sm","md","lg","xl","card","fetchNames","Spinner","animation","MONTHES","EmpoyeesBirthday","employees","selected","setSelected","usedMonthes","newArr","filter","forEach","month","toUpperCase","parseInt","dob","split","substr","d","Date","curMonthNumber","k","shift","fetchSelected","select","App","localStorageRef","localStorage","getItem","axios","get","data","el","JSON","parse","strId","localStorDataId","window","setItem","stringify","Container","Row","res","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.768057a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst selectedName = {\r\n  color: 'blue',\r\n}\r\n\r\nconst EmployeeCard = ({ employee, addFun, delFun }) => {\r\n  var styleName\r\n  if (employee.isNeeded) styleName = selectedName\r\n\r\n  return (\r\n    <Card className='my-3 p-1 cardWithoutBorder employeeCard'>\r\n      <Card.Body>\r\n        <h5 style={styleName}>\r\n          {employee.firstName + ' ' + employee.lastName}\r\n        </h5>\r\n        <div>\r\n          <div className='emplCardRadioInline'>\r\n            <input\r\n              onChange={delFun}\r\n              checked={!employee.isNeeded}\r\n              type='radio'\r\n              value='not active'\r\n              name={employee.id}\r\n            />{' '}\r\n            not active\r\n          </div>\r\n          <div className='emplCardRadioInline'>\r\n            <input\r\n              checked={employee.isNeeded}\r\n              onChange={addFun}\r\n              type='radio'\r\n              value='active'\r\n              name={employee.id}\r\n            />{' '}\r\n            active\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nEmployeeCard.propTypes = {\r\n  props: PropTypes.object.isRequired,\r\n  addFun: PropTypes.func.isRequired,\r\n  delFun: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EmployeeCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport EmployeeCard from './EmployeeCard'\r\nimport { Col, Spinner } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Empoyees = ({ addFun, delFun, namesProp }) => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [names, setName] = useState(namesProp)\r\n\r\n  useEffect(() => {\r\n    const fetchNames = async () => {\r\n      const sorted = []\r\n      if (namesProp !== undefined) {\r\n        namesProp.map((name) => {\r\n          if (typeof sorted[name.firstName.charAt(0)] == 'object') {\r\n            sorted[name.firstName.charAt(0)].push(name)\r\n          } else {\r\n            sorted[name.firstName.charAt(0)] = [name]\r\n          }\r\n          return 0\r\n        })\r\n\r\n        var cols = []\r\n        for (var i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++) {\r\n          var employeecards = []\r\n          if (sorted[String.fromCharCode(i)] !== undefined) {\r\n            sorted[String.fromCharCode(i)].sort(function (a, b) {\r\n              if (a.firstName > b.firstName) {\r\n                return 1\r\n              } else if (a.firstName < b.firstName) {\r\n                return -1\r\n              } else return 0\r\n            })\r\n\r\n            for (var j = 0; j < sorted[String.fromCharCode(i)].length; j++) {\r\n              employeecards.push(\r\n                <EmployeeCard\r\n                  key={String.fromCharCode(i) + j}\r\n                  employee={sorted[String.fromCharCode(i)][j]}\r\n                  addFun={addFun}\r\n                  delFun={delFun}\r\n                />\r\n              )\r\n            }\r\n          } else {\r\n            employeecards.push(\r\n              <h5 key={String.fromCharCode(i) + j} className='px-3'>\r\n                No Employees\r\n              </h5>\r\n            )\r\n          }\r\n          // console.log(employeecards)\r\n          // employeecards.sort(function (a, b) {\r\n          //   var aFirstName = a.props.employee.firstName\r\n          //   var bFirstName = b.props.employee.firstName\r\n\r\n          //   if (aFirstName > bFirstName) {\r\n          //     return 1\r\n          //   } else if (aFirstName < bFirstName) {\r\n          //     return -1\r\n          //   } else return 0\r\n          // })\r\n          // console.log(employeecards)\r\n          cols.push(\r\n            <Col\r\n              key={String.fromCharCode(i)}\r\n              sm={6}\r\n              md={6}\r\n              lg={4}\r\n              xl={3}\r\n              className='my-2'\r\n            >\r\n              <h3 className='px-5'>{String.fromCharCode(i)}</h3>\r\n              {employeecards.map((card) => card)}\r\n            </Col>\r\n          )\r\n        }\r\n\r\n        setName(cols)\r\n\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    fetchNames()\r\n  }, [addFun, delFun, namesProp])\r\n\r\n  return (\r\n    <div className='EmployeeCardsOuter border border-primary'>\r\n      {isLoading && <Spinner animation='border' />}\r\n      {!isLoading && names}\r\n    </div>\r\n  )\r\n}\r\n\r\nEmployeeCard.propTypes = {\r\n  addFun: PropTypes.func.isRequired,\r\n  delFun: PropTypes.func.isRequired,\r\n  namesProp: PropTypes.array,\r\n}\r\n\r\nexport default Empoyees\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MONTHES = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'Octoder',\r\n  'November',\r\n  'December',\r\n]\r\n\r\nconst EmpoyeesBirthday = ({ employees }) => {\r\n  const [selected, setSelected] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchSelected = async () => {\r\n      var usedMonthes = []\r\n\r\n      var newArr = []\r\n      employees\r\n        .filter((employee) => employee.isNeeded)\r\n        .forEach((employee) => {\r\n          newArr.push(employee)\r\n        })\r\n\r\n      MONTHES.forEach((month) =>\r\n        usedMonthes.push(\r\n          <div key={month}>\r\n            <h4 key={month + '_h4'}>{month.toUpperCase()}</h4>\r\n            {newArr.filter(\r\n              (employee) =>\r\n                MONTHES[parseInt(employee.dob.split('-')[1]) - 1] === month\r\n            ).length > 0 && (\r\n              <ul key={month + '_ul'}>\r\n                {newArr\r\n                  .filter(\r\n                    (employee) =>\r\n                      MONTHES[parseInt(employee.dob.split('-')[1]) - 1] ===\r\n                      month\r\n                  )\r\n                  .sort(function (a, b) {\r\n                    if (a.lastName > b.lastName) {\r\n                      return 1\r\n                    } else if (a.lastName < b.lastName) {\r\n                      return -1\r\n                    } else return 0\r\n                  })\r\n                  .map((employee) => {\r\n                    return (\r\n                      <li key={month + '_ul_' + employee.id}>\r\n                        {employee.firstName +\r\n                          ' ' +\r\n                          employee.lastName +\r\n                          ' ' +\r\n                          employee.dob.split('-')[2].substr(0, 2) +\r\n                          ' ' +\r\n                          MONTHES[parseInt(employee.dob.split('-')[1]) - 1] +\r\n                          ', ' +\r\n                          employee.dob.split('-')[0] +\r\n                          ' year'}\r\n                      </li>\r\n                    )\r\n                  })}\r\n              </ul>\r\n            )}\r\n            {newArr.filter(\r\n              (employee) =>\r\n                MONTHES[parseInt(employee.dob.split('-')[1]) - 1] === month\r\n            ).length === 0 && (\r\n              <h6 className='mx-3' key={month + '_noEmployee'}>\r\n                No Employees\r\n              </h6>\r\n            )}\r\n          </div>\r\n        )\r\n      )\r\n\r\n      if (newArr.length === 0) {\r\n        usedMonthes = [\r\n          <h5 key={'employeesListIsEmpty'}>Employees List is empty</h5>,\r\n        ]\r\n      }\r\n\r\n      var d = new Date()\r\n      var curMonthNumber = 0\r\n      for (var i = 0; i < MONTHES.length; i++) {\r\n        if (\r\n          ('' + d).split(' ')[1].toUpperCase() ===\r\n          MONTHES[i].substr(0, 3).toUpperCase()\r\n        ) {\r\n          curMonthNumber = i\r\n        }\r\n      }\r\n\r\n      for (var k = 0; k < curMonthNumber; k++) {\r\n        usedMonthes.push(usedMonthes.shift())\r\n      }\r\n\r\n      setSelected(usedMonthes)\r\n    }\r\n\r\n    fetchSelected()\r\n  }, [employees])\r\n\r\n  return <div key='monthes'>{selected.map((select) => select)}</div>\r\n}\r\n\r\nEmpoyeesBirthday.propTypes = {\r\n  employees: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default EmpoyeesBirthday\r\n","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport './App.css'\nimport Empoyees from './components/Empoyees'\nimport EmpoyeesBirthday from './components/EmpoyeesBirthday'\nimport axios from 'axios'\n\nfunction App() {\n  const [names, setName] = useState([])\n\n  // useEffect(() => {\n\n  // }, [names])\n\n  useEffect(() => {\n    const fetchNames = async () => {\n      const localStorageRef = localStorage.getItem('localStorDataId')\n\n      const { data } = await axios.get(\n        'https://yalantis-react-school-api.yalantis.com/api/task0/users'\n      )\n\n      data.forEach((el) => {\n        el.isNeeded = false\n      })\n\n      JSON.parse(localStorageRef).forEach((strId) => {\n        data.filter((el) => el.id === strId)[0].isNeeded = true\n      })\n\n      setName(data)\n    }\n\n    fetchNames()\n  }, [setName])\n\n  useEffect(() => {\n    var localStorDataId = names\n      .filter((name) => name.isNeeded)\n      .map((name) => {\n        return name.id\n      })\n\n    window.localStorage.setItem(\n      'localStorDataId',\n      JSON.stringify(localStorDataId)\n    )\n    // console.log(\n    //   // window.localStorage\n    //   //   .getItem('localStorDataId')\n    //   //   .split(',')\n    //   //   .filter((el) => el !== '')\n    //   localStorage.getItem('localStorDataId')\n    // )\n  }, [names])\n\n  function addBirthSel(id) {\n    var res = []\n    names.forEach((el) => res.push(el))\n    res\n      .filter((name) => name.id === id.target.name)\n      .forEach((el) => (el.isNeeded = true))\n\n    setName(res)\n  }\n  function delBirthSel(id) {\n    var res = []\n    names.forEach((el) => res.push(el))\n    res\n      .filter((name) => name.id === id.target.name)\n      .forEach((el) => (el.isNeeded = false))\n\n    setName(res)\n  }\n\n  return (\n    <div className='App'>\n      <Container>\n        <Row className='my-3'>\n          <Col sm={12} md={8}>\n            <Col>\n              <h2 className='nameTableBold px-3'>Employees</h2>\n            </Col>\n            <Col>\n              <Empoyees\n                addFun={addBirthSel}\n                delFun={delBirthSel}\n                namesProp={names}\n              />\n            </Col>\n          </Col>\n          <Col sm={12} md={4}>\n            <Col>\n              <h2 className='nameTableBold px-3'>Employees birthday</h2>\n            </Col>\n            <Col>\n              <EmpoyeesBirthday employees={names} />\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}